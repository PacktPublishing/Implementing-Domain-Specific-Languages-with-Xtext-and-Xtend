/*
 * generated by Xtext 2.10.0
 */
package org.example.xbase.entities.tests

import com.google.inject.Inject
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.example.xbase.entities.entities.EntitiesPackage
import org.example.xbase.entities.entities.Model
import org.example.xbase.entities.validation.EntitiesValidator
import org.junit.Test
import org.junit.runner.RunWith

@RunWith(XtextRunner)
@InjectWith(EntitiesInjectorProvider)
class EntitiesValidatorTest {

	@Inject extension ParseHelper<Model>
	@Inject extension ValidationTestHelper

	@Test 
	def void testCyclicHierarchy() {
		'''
		entity MyEntity extends MyEntity {
			attr MyEntity e;
		}
		'''.parse.assertCycleInHierarchy("MyEntity")
	}

	@Test
	def void testCycleInEntityHierarchy() {
		'''
			entity A extends B {}
			entity B extends C {}
			entity C extends A {}
		'''.parse => [
			assertCycleInHierarchy("A")
			assertCycleInHierarchy("B")
			assertCycleInHierarchy("C")
		]
	}

	@Test
	def void testCycleInEntityHierarchyWithAJavaClass() {
		// MySimulatedExtendedEntity is a Java class in the source folder
		// testdata; it extends MySimulatedEntity, another Java class
		// in the same source folder.
		// This way we simulate a cycle in the hierarchy involving a
		// Java class and not only entities
		'''
			import entities.MySimulatedExtendedEntity;
			
			entity MySimulatedEntity extends MySimulatedExtendedEntity {}
		'''.parse => [
			assertCycleInHierarchy("MySimulatedEntity")
		]
	}

	@Test 
	def void testValidAnnotations() {
		'''
		import com.google.inject.Inject
		
		@SuppressWarnings("rawtypes")
		entity MyEntity {
			@Inject
			attr MyEntity e;
		}
		'''.parse.assertNoErrors
	}

	@Test 
	def void testInValidAnnotations() {
		// this is not checked by the validator, so this program
		// is considered valid, even though it generates invalid Java code
		// in the workbench Java errors will be retrieved by
		// org.example.xbase.entities.validation.EntitiesConfigurableIssueCodes
		// and tested in
		// org.example.xbase.entities.ui.tests.XbaseEntitiesWorkbenchTest
		'''
		import com.google.inject.Inject
		
		@Inject
		entity MyEntity {
			attr MyEntity e;
		}
		'''.parse.assertNoErrors
	}

	def private assertCycleInHierarchy(Model m, String entityName) {
		m.assertError(
			EntitiesPackage.eINSTANCE.entity,
			EntitiesValidator.HIERARCHY_CYCLE,
			"cycle in hierarchy of entity '" + entityName + "'"
		)
	}
}
