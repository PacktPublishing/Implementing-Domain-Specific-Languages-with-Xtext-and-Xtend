/*
 * generated by Xtext 2.10.0
 */
package org.example.school.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.example.school.school.SchoolModel
import org.example.school.school.Teacher

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class SchoolGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		resource.allContents.toIterable.filter(SchoolModel).forEach [
			fsa.generateFile
				('''«resource.URI.lastSegment».txt''',
					generateSchools)
		]
	}

	def generateSchools(SchoolModel schoolModel) {
		schoolModel.schools.map [
			'''
			school «name»
				students number «statistics.studentsNumber»
				students with no teacher «statistics.studentsWithNoTeacher.size»
				teachers number «statistics.teachersNumber»
				teachers
					«generateTeachers(teachers)»
				students
					«FOR it : students»
					«name» registration number «registrationNum»
						student's teachers
							«generateTeachers(teachers)»
					«ENDFOR»
			'''
		].join("\n")
	}

	def generateTeachers(Iterable<Teacher> teachers) '''
		«FOR it : teachers»
		«name»
		«ENDFOR»
	'''
}
